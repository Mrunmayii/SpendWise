- name: Deploy Spendwise Containers
  hosts: localhost
  remote_user: mrunmayi
  become: false
  tasks:
    - name: Start Docker service
      service:
        name: docker
        state: started

    - name: Pull latest backend Docker image
      shell: docker pull mrunmayi12/expense-tracker
      register: pull_result_backend

    - name: Pull latest frontend Docker image
      shell: docker pull mrunmayi12/expense-tracker-frontend:latest
      register: pull_result_frontend

    - name: Display Backend Pull Result
      debug:
        var: pull_result_backend.stdout

    - name: Display Frontend Pull Result
      debug:
        var: pull_result_frontend.stdout

    - name: Stop and remove old container if it exists
      shell: |
        docker stop expense-tracker || true
        docker rm expense-tracker || true
        docker stop expense-tracker-frontend || true
        docker rm expense-tracker-frontend || true
      ignore_errors: yes

#    - name: Run the Docker container
#      command: >
#        docker run -it -d --name expense-tracker -p 5000:9090
#        -e DB_USER={{ DB_USER }}
#        -e DB_PASS={{ DB_PASS }}
#        mrunmayi12/expense-tracker:latest
##      command: docker run -it -d --name expense-tracker -p 5000:9090 mrunmayi12/expense-tracker:latest
#      register: run_result

    - name: Run Backend Container
      command: docker run -d --name expense-tracker-backend -p 5000:5000 -e DB_USER={{ DB_USER }} -e DB_PASS={{ DB_PASS }} mrunmayi12/expense-tracker:latest
      register: backend_result

    - name: Run Frontend Container
      command: docker run -d --name expense-tracker-frontend -p 3000:3000 --env REACT_APP_BACKEND_URL=http://backend-ip:5000 mrunmayi12/expense-tracker-frontend:latest

    - name: Display Container Run Result
      debug:
        var: backend_result.stdout